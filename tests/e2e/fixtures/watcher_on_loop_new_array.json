{
  "type": "screen_package",
  "version": "2",
  "screens": [
    {
      "id": 2,
      "screen_category_id": "1",
      "title": "Test",
      "description": "test",
      "type": "FORM",
      "config": [
        {
          "name": "Test",
          "items": [
            {
              "items": [
                {
                  "label": "Line Input",
                  "config": {
                    "icon": "far fa-square",
                    "name": "form_input_1",
                    "type": "text",
                    "label": "New Input",
                    "helper": null,
                    "dataFormat": "string",
                    "validation": null,
                    "placeholder": null
                  },
                  "component": "FormInput",
                  "inspector": [
                    {
                      "type": "FormInput",
                      "field": "name",
                      "config": {
                        "name": "Variable Name",
                        "label": "Variable Name",
                        "helper": "A variable name is a symbolic name to reference information.",
                        "validation": "regex:/^(?:[A-Za-z])(?:[0-9A-Z_.a-z])*(?<![.])$/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                      }
                    },
                    {
                      "type": "FormInput",
                      "field": "label",
                      "config": {
                        "label": "Label",
                        "helper": "The label describes the field's name"
                      }
                    },
                    {
                      "type": "FormMultiselect",
                      "field": "dataFormat",
                      "config": {
                        "name": "Data Type",
                        "label": "Data Type",
                        "helper": "The data type specifies what kind of data is stored in the variable.",
                        "options": [
                          { "value": "string", "content": "Text" },
                          { "value": "int", "content": "Integer" },
                          { "value": "currency", "content": "Currency" },
                          { "value": "percentage", "content": "Percentage" },
                          { "value": "float", "content": "Decimal" },
                          { "value": "datetime", "content": "Datetime" },
                          { "value": "date", "content": "Date" },
                          { "value": "password", "content": "Password" }
                        ],
                        "validation": "required"
                      }
                    },
                    {
                      "type": {
                        "extends": {
                          "props": [
                            "label",
                            "error",
                            "options",
                            "helper",
                            "name",
                            "value",
                            "selectedControl"
                          ],
                          "mixins": [
                            {
                              "props": {
                                "validation": { "type": null },
                                "validationData": { "type": null },
                                "validationField": { "type": null },
                                "validationMessages": { "type": null }
                              },
                              "watch": { "validationData": { "deep": true } },
                              "methods": []
                            }
                          ],
                          "methods": [],
                          "computed": [],
                          "_compiled": true,
                          "components": {
                            "Multiselect": {
                              "name": "vue-multiselect",
                              "props": {
                                "name": { "default": null },
                                "limit": { "default": 99999 },
                                "loading": { "default": false },
                                "disabled": { "default": false },
                                "tabindex": { "default": 0 },
                                "limitText": [],
                                "maxHeight": { "default": 300 },
                                "showLabels": { "default": true },
                                "selectLabel": {
                                  "default": "Press enter to select"
                                },
                                "deselectLabel": {
                                  "default": "Press enter to remove"
                                },
                                "openDirection": { "default": null },
                                "selectedLabel": { "default": "Selected" },
                                "showNoOptions": { "default": true },
                                "showNoResults": { "default": true },
                                "selectGroupLabel": {
                                  "default": "Press enter to select group"
                                },
                                "deselectGroupLabel": {
                                  "default": "Press enter to deselect group"
                                }
                              },
                              "mixins": [
                                {
                                  "props": {
                                    "id": { "default": null },
                                    "max": {
                                      "type": [null, null],
                                      "default": false
                                    },
                                    "label": [],
                                    "value": { "type": null },
                                    "options": { "required": true },
                                    "trackBy": [],
                                    "multiple": { "default": false },
                                    "taggable": { "default": false },
                                    "blockKeys": [],
                                    "allowEmpty": { "default": true },
                                    "groupLabel": [],
                                    "resetAfter": { "default": false },
                                    "searchable": { "default": true },
                                    "customLabel": [],
                                    "groupSelect": { "default": false },
                                    "groupValues": [],
                                    "placeholder": {
                                      "default": "Select option"
                                    },
                                    "tagPosition": { "default": "top" },
                                    "hideSelected": { "default": false },
                                    "optionsLimit": { "default": 1000 },
                                    "clearOnSelect": { "default": true },
                                    "closeOnSelect": { "default": true },
                                    "internalSearch": { "default": true },
                                    "preselectFirst": { "default": false },
                                    "preserveSearch": { "default": false },
                                    "tagPlaceholder": {
                                      "default": "Press enter to create a tag"
                                    }
                                  },
                                  "watch": [],
                                  "methods": [],
                                  "computed": []
                                },
                                {
                                  "props": {
                                    "showPointer": { "default": true },
                                    "optionHeight": { "default": 40 }
                                  },
                                  "watch": [],
                                  "methods": [],
                                  "computed": []
                                }
                              ],
                              "computed": [],
                              "_compiled": true,
                              "beforeCreate": [null],
                              "staticRenderFns": []
                            }
                          },
                          "inheritAttrs": false,
                          "staticRenderFns": []
                        },
                        "computed": [],
                        "_compiled": true,
                        "staticRenderFns": []
                      },
                      "field": "dataMask",
                      "config": {
                        "name": "Data Format",
                        "label": "Data Format",
                        "helper": "The data format for the selected type."
                      }
                    },
                    {
                      "type": "ValidationSelect",
                      "field": "validation",
                      "config": {
                        "label": "Validation Rules",
                        "helper": "The validation rules needed for this field"
                      }
                    },
                    {
                      "type": "FormInput",
                      "field": "placeholder",
                      "config": {
                        "label": "Placeholder Text",
                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                      }
                    },
                    {
                      "type": "FormInput",
                      "field": "helper",
                      "config": {
                        "label": "Helper Text",
                        "helper": "Help text is meant to provide additional guidance on the field's value"
                      }
                    },
                    {
                      "type": "FormCheckbox",
                      "field": "readonly",
                      "config": { "label": "Read Only" }
                    },
                    {
                      "type": "ColorSelect",
                      "field": "color",
                      "config": {
                        "label": "Text Color",
                        "helper": "Set the element's text color",
                        "options": [
                          { "value": "text-primary", "content": "primary" },
                          { "value": "text-secondary", "content": "secondary" },
                          { "value": "text-success", "content": "success" },
                          { "value": "text-danger", "content": "danger" },
                          { "value": "text-warning", "content": "warning" },
                          { "value": "text-info", "content": "info" },
                          { "value": "text-light", "content": "light" },
                          { "value": "text-dark", "content": "dark" }
                        ]
                      }
                    },
                    {
                      "type": "ColorSelect",
                      "field": "bgcolor",
                      "config": {
                        "label": "Background Color",
                        "helper": "Set the element's background color",
                        "options": [
                          {
                            "value": "alert alert-primary",
                            "content": "primary"
                          },
                          {
                            "value": "alert alert-secondary",
                            "content": "secondary"
                          },
                          {
                            "value": "alert alert-success",
                            "content": "success"
                          },
                          {
                            "value": "alert alert-danger",
                            "content": "danger"
                          },
                          {
                            "value": "alert alert-warning",
                            "content": "warning"
                          },
                          { "value": "alert alert-info", "content": "info" },
                          { "value": "alert alert-light", "content": "light" },
                          { "value": "alert alert-dark", "content": "dark" }
                        ]
                      }
                    },
                    {
                      "type": {
                        "props": ["value"],
                        "watch": { "value": { "immediate": true } },
                        "methods": [],
                        "_scopeId": "data-v-5d32d6af",
                        "computed": { "effectiveValue": [] },
                        "_compiled": true,
                        "components": {
                          "MonacoEditor": {
                            "name": "monaco-editor",
                            "_Ctor": [],
                            "props": { "amdRequire": [] },
                            "extends": {
                              "name": "MonacoEditor",
                              "model": { "event": "change" },
                              "props": {
                                "theme": { "default": "vs" },
                                "value": { "required": true },
                                "options": [],
                                "language": [],
                                "original": [],
                                "amdRequire": [],
                                "diffEditor": { "default": false }
                              },
                              "watch": {
                                "options": { "deep": true, "user": true }
                              },
                              "methods": []
                            },
                            "methods": []
                          }
                        },
                        "staticRenderFns": []
                      },
                      "field": "defaultValue",
                      "config": {
                        "label": "Default Value",
                        "helper": "Takes precedence over value set in data."
                      }
                    },
                    {
                      "type": "FormInput",
                      "field": "conditionalHide",
                      "config": {
                        "label": "Visibility Rule",
                        "helper": "This control is hidden until this expression is true"
                      }
                    },
                    {
                      "type": "FormInput",
                      "field": "customFormatter",
                      "config": {
                        "label": "Custom Format String",
                        "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                        "validation": null
                      }
                    },
                    {
                      "type": "FormInput",
                      "field": "customCssSelector",
                      "config": {
                        "label": "CSS Selector Name",
                        "helper": "Use this in your custom css rules",
                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                      }
                    }
                  ],
                  "editor-control": "FormInput",
                  "editor-component": "FormInput"
                }
              ],
              "label": "Loop",
              "config": {
                "icon": "fas fa-redo",
                "name": "loop_1",
                "label": null,
                "settings": {
                  "add": true,
                  "type": "new",
                  "times": "3",
                  "varname": "loop_1"
                }
              },
              "component": "FormLoop",
              "container": true,
              "inspector": [
                {
                  "type": "LoopInspector",
                  "field": "settings",
                  "config": { "label": null, "helper": null }
                },
                {
                  "type": "FormInput",
                  "field": "conditionalHide",
                  "config": {
                    "label": "Visibility Rule",
                    "helper": "This control is hidden until this expression is true"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "customFormatter",
                  "config": {
                    "label": "Custom Format String",
                    "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                    "validation": null
                  }
                },
                {
                  "type": "FormInput",
                  "field": "customCssSelector",
                  "config": {
                    "label": "CSS Selector Name",
                    "helper": "Use this in your custom css rules",
                    "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                  }
                }
              ],
              "editor-control": "Loop",
              "editor-component": "Loop"
            }
          ]
        }
      ],
      "computed": [],
      "custom_css": null,
      "created_at": "2021-05-24T13:27:37-07:00",
      "updated_at": "2021-05-24T20:13:26-07:00",
      "status": "ACTIVE",
      "key": null,
      "watchers": [
        {
          "input_data": "{}",
          "script_configuration": "{}",
          "synchronous": true,
          "show_async_loading": false,
          "run_onload": false,
          "name": "Watch loop",
          "watching": "loop_1",
          "script": {
            "id": "script-4",
            "key": null,
            "title": "testscr",
            "description": "testscr",
            "language": "php",
            "code": "<?php \r\n/*  \n *  Welcome to ProcessMaker 4 Script Editor \n *  To access Environment Variables use getenv(\"ENV_VAR_NAME\") \n *  To access Request Data use $data \n *  To access Configuration Data use $config \n *  To preview your script, click the Run button using the provided input and config data \n *  Return an array and it will be merged with the processes data \n *  Example API to retrieve user email by their ID $api->users()->getUserById(1)['email'] \n *  API Documentation https://github.com/ProcessMaker/docker-executor-php/tree/master/docs/sdk \n */\n\n return [];",
            "timeout": 60,
            "run_as_user_id": 2,
            "created_at": "2021-05-24T13:28:30-07:00",
            "updated_at": "2021-05-24T13:29:26-07:00",
            "status": "ACTIVE",
            "script_category_id": "1",
            "script_executor_id": 3
          },
          "script_id": "4",
          "script_key": null,
          "uid": "16219123904601"
        }
      ],
      "categories": [
        {
          "id": 1,
          "name": "Uncategorized",
          "status": "ACTIVE",
          "is_system": 0,
          "created_at": "2021-05-24T13:23:04-07:00",
          "updated_at": "2021-05-24T13:23:04-07:00",
          "pivot": {
            "assignable_id": 2,
            "category_id": 1,
            "category_type": "ProcessMaker\\Models\\ScreenCategory"
          }
        }
      ]
    }
  ],
  "screen_categories": [],
  "scripts": [
    {
      "id": 4,
      "key": null,
      "title": "testscr",
      "description": "testscr",
      "language": "php",
      "code": "<?php \r\n/*  \n *  Welcome to ProcessMaker 4 Script Editor \n *  To access Environment Variables use getenv(\"ENV_VAR_NAME\") \n *  To access Request Data use $data \n *  To access Configuration Data use $config \n *  To preview your script, click the Run button using the provided input and config data \n *  Return an array and it will be merged with the processes data \n *  Example API to retrieve user email by their ID $api->users()->getUserById(1)['email'] \n *  API Documentation https://github.com/ProcessMaker/docker-executor-php/tree/master/docs/sdk \n */\n\n return [];",
      "timeout": 60,
      "run_as_user_id": 2,
      "created_at": "2021-05-24T13:28:30-07:00",
      "updated_at": "2021-05-24T13:29:26-07:00",
      "status": "ACTIVE",
      "script_category_id": "1",
      "script_executor_id": 3,
      "categories": [
        {
          "id": 1,
          "name": "Uncategorized",
          "status": "ACTIVE",
          "is_system": 0,
          "created_at": "2021-05-24T13:23:04-07:00",
          "updated_at": "2021-05-24T13:23:04-07:00",
          "pivot": {
            "assignable_id": 4,
            "category_id": 1,
            "category_type": "ProcessMaker\\Models\\ScriptCategory"
          }
        }
      ]
    }
  ]
}
