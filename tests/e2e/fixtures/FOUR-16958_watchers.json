{
    "type": "screen_package",
    "version": "2",
    "screens": [
        {
            "id": 9375,
            "uuid": "9c50462c-7b18-4e78-9372-15a9cb4595fe",
            "screen_category_id": "1",
            "title": "Reset this page",
            "description": "Fixing the reset this page issue",
            "type": "FORM",
            "config": [
                {
                    "name": "Reset this page",
                    "items": [
                        {
                            "label": "Textarea",
                            "config": {
                                "icon": "fas fa-paragraph",
                                "name": "nyc.q1comment",
                                "rows": 2,
                                "label": "q1comment",
                                "helper": null,
                                "currency": {
                                    "code": "USD",
                                    "name": "US Dollar",
                                    "format": "#,###.##",
                                    "symbol": "$"
                                },
                                "readonly": false,
                                "richtext": false,
                                "validation": [],
                                "placeholder": null,
                                "defaultValue": {
                                    "mode": "basic",
                                    "value": null
                                }
                            },
                            "component": "FormTextArea",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$\/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the field's name"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "placeholder",
                                    "config": {
                                        "label": "Placeholder Text",
                                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "helper",
                                    "config": {
                                        "label": "Helper Text",
                                        "helper": "Help text is meant to provide additional guidance on the field's value"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "richtext",
                                    "config": {
                                        "label": "Rich Text",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ValidationSelect",
                                    "field": "validation",
                                    "config": {
                                        "label": "Validation Rules",
                                        "helper": "The validation rules needed for this field"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "rows",
                                    "config": {
                                        "label": "Rows",
                                        "helper": "The number of rows to provide for input",
                                        "validation": "integer"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "readonly",
                                    "config": {
                                        "label": "Read Only",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "default-value-editor",
                                    "field": "defaultValue",
                                    "config": {
                                        "label": "Default Value",
                                        "helper": "The default value is pre populated using the existing request data. This feature will allow you to modify the value displayed on screen load if needed."
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormTextArea",
                            "editor-component": "FormTextArea"
                        },
                        {
                            "label": "Textarea",
                            "config": {
                                "icon": "fas fa-paragraph",
                                "name": "nyc.form_text_area_1",
                                "rows": 2,
                                "label": "Textarea",
                                "helper": null,
                                "currency": {
                                    "code": "USD",
                                    "name": "US Dollar",
                                    "format": "#,###.##",
                                    "symbol": "$"
                                },
                                "readonly": false,
                                "richtext": false,
                                "validation": [],
                                "placeholder": null,
                                "defaultValue": {
                                    "mode": "basic",
                                    "value": null
                                }
                            },
                            "component": "FormTextArea",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$\/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the field's name"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "placeholder",
                                    "config": {
                                        "label": "Placeholder Text",
                                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "helper",
                                    "config": {
                                        "label": "Helper Text",
                                        "helper": "Help text is meant to provide additional guidance on the field's value"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "richtext",
                                    "config": {
                                        "label": "Rich Text",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ValidationSelect",
                                    "field": "validation",
                                    "config": {
                                        "label": "Validation Rules",
                                        "helper": "The validation rules needed for this field"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "rows",
                                    "config": {
                                        "label": "Rows",
                                        "helper": "The number of rows to provide for input",
                                        "validation": "integer"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "readonly",
                                    "config": {
                                        "label": "Read Only",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "default-value-editor",
                                    "field": "defaultValue",
                                    "config": {
                                        "label": "Default Value",
                                        "helper": "The default value is pre populated using the existing request data. This feature will allow you to modify the value displayed on screen load if needed."
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormTextArea",
                            "editor-component": "FormTextArea"
                        },
                        {
                            "label": "Line Input",
                            "config": {
                                "icon": "far fa-square",
                                "name": "nyc.input1",
                                "type": "text",
                                "label": "Input1",
                                "helper": null,
                                "readonly": false,
                                "dataFormat": "string",
                                "validation": [],
                                "placeholder": null,
                                "defaultValue": {
                                    "mode": "basic",
                                    "value": null
                                }
                            },
                            "component": "FormInput",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$\/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the field's name"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "dataFormat",
                                    "config": {
                                        "name": "Data Type",
                                        "label": "Data Type",
                                        "helper": "The data type specifies what kind of data is stored in the variable.",
                                        "options": [
                                            {
                                                "value": "string",
                                                "content": "Text"
                                            },
                                            {
                                                "value": "int",
                                                "content": "Integer"
                                            },
                                            {
                                                "value": "currency",
                                                "content": "Currency"
                                            },
                                            {
                                                "value": "percentage",
                                                "content": "Percentage"
                                            },
                                            {
                                                "value": "float",
                                                "content": "Decimal"
                                            },
                                            {
                                                "value": "datetime",
                                                "content": "Datetime"
                                            },
                                            {
                                                "value": "date",
                                                "content": "Date"
                                            },
                                            {
                                                "value": "password",
                                                "content": "Password"
                                            }
                                        ],
                                        "validation": "required"
                                    }
                                },
                                {
                                    "type": {
                                        "extends": {
                                            "props": [
                                                "label",
                                                "error",
                                                "options",
                                                "helper",
                                                "name",
                                                "value",
                                                "selectedControl"
                                            ],
                                            "mixins": [
                                                {
                                                    "name": "ValidationMixin",
                                                    "props": {
                                                        "config": {
                                                            "type": null
                                                        },
                                                        "validation": {
                                                            "type": null
                                                        },
                                                        "validationData": {
                                                            "type": null
                                                        },
                                                        "validationField": {
                                                            "type": null
                                                        },
                                                        "validationMessages": {
                                                            "type": null
                                                        }
                                                    },
                                                    "watch": {
                                                        "validationData": {
                                                            "deep": true,
                                                            "user": true
                                                        }
                                                    },
                                                    "mixins": [
                                                        {
                                                            "name": "ProxyDataMixin",
                                                            "methods": []
                                                        }
                                                    ],
                                                    "methods": [],
                                                    "computed": []
                                                }
                                            ],
                                            "methods": [],
                                            "computed": [],
                                            "_compiled": true,
                                            "components": {
                                                "RequiredAsterisk": {
                                                    "name": "RequiredAsterisk",
                                                    "_Ctor": [],
                                                    "_compiled": true,
                                                    "staticRenderFns": []
                                                }
                                            },
                                            "inheritAttrs": false,
                                            "staticRenderFns": []
                                        },
                                        "computed": [],
                                        "_compiled": true,
                                        "staticRenderFns": []
                                    },
                                    "field": "dataMask",
                                    "config": {
                                        "name": "Data Format",
                                        "label": "Data Format",
                                        "helper": "The data format for the selected type."
                                    }
                                },
                                {
                                    "type": "ValidationSelect",
                                    "field": "validation",
                                    "config": {
                                        "label": "Validation Rules",
                                        "helper": "The validation rules needed for this field"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "placeholder",
                                    "config": {
                                        "label": "Placeholder Text",
                                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "helper",
                                    "config": {
                                        "label": "Helper Text",
                                        "helper": "Help text is meant to provide additional guidance on the field's value"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "readonly",
                                    "config": {
                                        "label": "Read Only",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "default-value-editor",
                                    "field": "defaultValue",
                                    "config": {
                                        "label": "Default Value",
                                        "helper": "The default value is pre populated using the existing request data. This feature will allow you to modify the value displayed on screen load if needed."
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormInput",
                            "editor-component": "FormInput"
                        },
                        {
                            "label": "Line Input",
                            "config": {
                                "icon": "far fa-square",
                                "name": "nyc.input2",
                                "type": "text",
                                "label": "Input2",
                                "helper": null,
                                "readonly": false,
                                "dataFormat": "string",
                                "validation": [],
                                "placeholder": null,
                                "defaultValue": {
                                    "mode": "basic",
                                    "value": null
                                }
                            },
                            "component": "FormInput",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$\/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the field's name"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "dataFormat",
                                    "config": {
                                        "name": "Data Type",
                                        "label": "Data Type",
                                        "helper": "The data type specifies what kind of data is stored in the variable.",
                                        "options": [
                                            {
                                                "value": "string",
                                                "content": "Text"
                                            },
                                            {
                                                "value": "int",
                                                "content": "Integer"
                                            },
                                            {
                                                "value": "currency",
                                                "content": "Currency"
                                            },
                                            {
                                                "value": "percentage",
                                                "content": "Percentage"
                                            },
                                            {
                                                "value": "float",
                                                "content": "Decimal"
                                            },
                                            {
                                                "value": "datetime",
                                                "content": "Datetime"
                                            },
                                            {
                                                "value": "date",
                                                "content": "Date"
                                            },
                                            {
                                                "value": "password",
                                                "content": "Password"
                                            }
                                        ],
                                        "validation": "required"
                                    }
                                },
                                {
                                    "type": {
                                        "extends": {
                                            "props": [
                                                "label",
                                                "error",
                                                "options",
                                                "helper",
                                                "name",
                                                "value",
                                                "selectedControl"
                                            ],
                                            "mixins": [
                                                {
                                                    "name": "ValidationMixin",
                                                    "props": {
                                                        "config": {
                                                            "type": null
                                                        },
                                                        "validation": {
                                                            "type": null
                                                        },
                                                        "validationData": {
                                                            "type": null
                                                        },
                                                        "validationField": {
                                                            "type": null
                                                        },
                                                        "validationMessages": {
                                                            "type": null
                                                        }
                                                    },
                                                    "watch": {
                                                        "validationData": {
                                                            "deep": true,
                                                            "user": true
                                                        }
                                                    },
                                                    "mixins": [
                                                        {
                                                            "name": "ProxyDataMixin",
                                                            "methods": []
                                                        }
                                                    ],
                                                    "methods": [],
                                                    "computed": []
                                                }
                                            ],
                                            "methods": [],
                                            "computed": [],
                                            "_compiled": true,
                                            "components": {
                                                "RequiredAsterisk": {
                                                    "name": "RequiredAsterisk",
                                                    "_Ctor": [],
                                                    "_compiled": true,
                                                    "staticRenderFns": []
                                                }
                                            },
                                            "inheritAttrs": false,
                                            "staticRenderFns": []
                                        },
                                        "computed": [],
                                        "_compiled": true,
                                        "staticRenderFns": []
                                    },
                                    "field": "dataMask",
                                    "config": {
                                        "name": "Data Format",
                                        "label": "Data Format",
                                        "helper": "The data format for the selected type."
                                    }
                                },
                                {
                                    "type": "ValidationSelect",
                                    "field": "validation",
                                    "config": {
                                        "label": "Validation Rules",
                                        "helper": "The validation rules needed for this field"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "placeholder",
                                    "config": {
                                        "label": "Placeholder Text",
                                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "helper",
                                    "config": {
                                        "label": "Helper Text",
                                        "helper": "Help text is meant to provide additional guidance on the field's value"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "readonly",
                                    "config": {
                                        "label": "Read Only",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "default-value-editor",
                                    "field": "defaultValue",
                                    "config": {
                                        "label": "Default Value",
                                        "helper": "The default value is pre populated using the existing request data. This feature will allow you to modify the value displayed on screen load if needed."
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormInput",
                            "editor-component": "FormInput"
                        },
                        {
                            "label": "Submit Button",
                            "config": {
                                "icon": "fas fa-share-square",
                                "name": "resetfields",
                                "event": "script",
                                "label": "TestClear",
                                "loading": false,
                                "tooltip": [],
                                "variant": "primary",
                                "fieldValue": null,
                                "loadingLabel": "Loading...",
                                "defaultSubmit": true
                            },
                            "component": "FormButton",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the button's text"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^(?:[A-Za-z])(?:[0-9A-Z_.a-z])*(?<![.])$\/|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "event",
                                    "config": {
                                        "label": "Type",
                                        "helper": "Choose whether the button should submit the form",
                                        "options": [
                                            {
                                                "value": "submit",
                                                "content": "Submit Button"
                                            },
                                            {
                                                "value": "script",
                                                "content": "Regular Button"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "LoadingSubmitButton",
                                    "field": "loading",
                                    "config": {
                                        "label": "Loading Submit Button",
                                        "helper": "Loading Submit Button"
                                    }
                                },
                                {
                                    "type": "LabelSubmitButton",
                                    "field": "loadingLabel",
                                    "config": {
                                        "label": "Loading Submit Button Label",
                                        "helper": "Loading Submit Button Label"
                                    }
                                },
                                {
                                    "type": {
                                        "_Ctor": [],
                                        "props": {
                                            "label": {
                                                "type": null
                                            },
                                            "value": {
                                                "type": null
                                            },
                                            "helper": {
                                                "type": null
                                            }
                                        },
                                        "watch": {
                                            "value": {
                                                "user": true,
                                                "immediate": true
                                            }
                                        },
                                        "methods": [],
                                        "computed": [],
                                        "_compiled": true,
                                        "components": {
                                            "FormTextArea": {
                                                "name": "FormTextArea",
                                                "_Ctor": [],
                                                "props": {
                                                    "name": {
                                                        "type": null
                                                    },
                                                    "rows": {
                                                        "type": null
                                                    },
                                                    "error": {
                                                        "type": null
                                                    },
                                                    "label": {
                                                        "type": null
                                                    },
                                                    "value": {
                                                        "type": null
                                                    },
                                                    "helper": {
                                                        "type": null
                                                    },
                                                    "readonly": {
                                                        "type": null
                                                    },
                                                    "richtext": {
                                                        "type": null
                                                    },
                                                    "controlClass": {
                                                        "type": null
                                                    }
                                                },
                                                "watch": {
                                                    "rows": {
                                                        "user": true,
                                                        "immediate": true
                                                    }
                                                },
                                                "mixins": [
                                                    {
                                                        "methods": [],
                                                        "directives": {
                                                            "uni-id": [],
                                                            "uni-for": [],
                                                            "uni-form": [],
                                                            "uni-aria-owns": [],
                                                            "uni-aria-flowto": [],
                                                            "uni-aria-controls": [],
                                                            "uni-aria-labelledby": [],
                                                            "uni-aria-describedby": [],
                                                            "uni-aria-activedescendant": []
                                                        }
                                                    },
                                                    {
                                                        "name": "ValidationMixin",
                                                        "props": {
                                                            "config": {
                                                                "type": null
                                                            },
                                                            "validation": {
                                                                "type": null
                                                            },
                                                            "validationData": {
                                                                "type": null
                                                            },
                                                            "validationField": {
                                                                "type": null
                                                            },
                                                            "validationMessages": {
                                                                "type": null
                                                            }
                                                        },
                                                        "watch": {
                                                            "validationData": {
                                                                "deep": true,
                                                                "user": true
                                                            }
                                                        },
                                                        "mixins": [
                                                            {
                                                                "name": "ProxyDataMixin",
                                                                "methods": []
                                                            }
                                                        ],
                                                        "methods": [],
                                                        "computed": []
                                                    }
                                                ],
                                                "methods": [],
                                                "computed": [],
                                                "_compiled": true,
                                                "components": {
                                                    "Editor": {
                                                        "_Ctor": [],
                                                        "props": {
                                                            "id": [],
                                                            "init": [],
                                                            "value": [],
                                                            "apiKey": [],
                                                            "inline": [],
                                                            "plugins": {
                                                                "type": [
                                                                    null,
                                                                    null
                                                                ]
                                                            },
                                                            "tagName": [],
                                                            "toolbar": {
                                                                "type": [
                                                                    null,
                                                                    null
                                                                ]
                                                            },
                                                            "disabled": [],
                                                            "modelEvents": {
                                                                "type": [
                                                                    null,
                                                                    null
                                                                ]
                                                            },
                                                            "cloudChannel": [],
                                                            "initialValue": []
                                                        },
                                                        "watch": []
                                                    },
                                                    "DisplayErrors": {
                                                        "props": [
                                                            "name",
                                                            "error",
                                                            "validator"
                                                        ],
                                                        "computed": [],
                                                        "_compiled": true,
                                                        "staticRenderFns": []
                                                    },
                                                    "RequiredAsterisk": {
                                                        "name": "RequiredAsterisk",
                                                        "_Ctor": [],
                                                        "_compiled": true,
                                                        "staticRenderFns": []
                                                    }
                                                },
                                                "inheritAttrs": false,
                                                "staticRenderFns": []
                                            }
                                        },
                                        "inheritAttrs": false,
                                        "staticRenderFns": []
                                    },
                                    "field": "tooltip",
                                    "config": {
                                        "label": "Tooltip",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "fieldValue",
                                    "config": {
                                        "label": "Value",
                                        "helper": "The value being submitted"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "variant",
                                    "config": {
                                        "label": "Button Variant Style",
                                        "helper": "The variant determines the appearance of the button",
                                        "options": [
                                            {
                                                "value": "primary",
                                                "content": "Primary"
                                            },
                                            {
                                                "value": "secondary",
                                                "content": "Secondary"
                                            },
                                            {
                                                "value": "success",
                                                "content": "Success"
                                            },
                                            {
                                                "value": "danger",
                                                "content": "Danger"
                                            },
                                            {
                                                "value": "warning",
                                                "content": "Warning"
                                            },
                                            {
                                                "value": "info",
                                                "content": "Info"
                                            },
                                            {
                                                "value": "light",
                                                "content": "Light"
                                            },
                                            {
                                                "value": "dark",
                                                "content": "Dark"
                                            },
                                            {
                                                "value": "link",
                                                "content": "Link"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormSubmit",
                            "editor-component": "FormButton"
                        },
                        {
                            "label": "Page Navigation",
                            "config": {
                                "icon": "far fa-compass",
                                "event": "pageNavigate",
                                "label": "Next",
                                "variant": "primary",
                                "eventData": "1"
                            },
                            "component": "FormButton",
                            "inspector": [
                                {
                                    "type": "PageSelect",
                                    "field": "eventData",
                                    "config": {
                                        "label": "Destination Screen",
                                        "helper": "The destination page to navigate to"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Button Label",
                                        "helper": "The label describes the button's text"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "variant",
                                    "config": {
                                        "label": "Button Variant Style",
                                        "helper": "The variant determines the appearance of the button",
                                        "options": [
                                            {
                                                "value": "primary",
                                                "content": "Primary"
                                            },
                                            {
                                                "value": "secondary",
                                                "content": "Secondary"
                                            },
                                            {
                                                "value": "success",
                                                "content": "Success"
                                            },
                                            {
                                                "value": "danger",
                                                "content": "Danger"
                                            },
                                            {
                                                "value": "warning",
                                                "content": "Warning"
                                            },
                                            {
                                                "value": "info",
                                                "content": "Info"
                                            },
                                            {
                                                "value": "light",
                                                "content": "Light"
                                            },
                                            {
                                                "value": "dark",
                                                "content": "Dark"
                                            },
                                            {
                                                "value": "link",
                                                "content": "Link"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "PageNavigation",
                            "editor-component": "FormButton"
                        }
                    ],
                    "order": 1
                },
                {
                    "name": "page2",
                    "items": [
                        {
                            "label": "Textarea",
                            "config": {
                                "icon": "fas fa-paragraph",
                                "name": "nyc.q2comment",
                                "rows": 2,
                                "label": "q2comment",
                                "helper": null,
                                "currency": {
                                    "code": "USD",
                                    "name": "US Dollar",
                                    "format": "#,###.##",
                                    "symbol": "$"
                                },
                                "readonly": false,
                                "richtext": false,
                                "validation": [],
                                "placeholder": null
                            },
                            "component": "FormTextArea",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^([a-zA-Z]([a-zA-Z0-9_]?)+\\.?)+(?<!\\.)$\/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the field's name"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "placeholder",
                                    "config": {
                                        "label": "Placeholder Text",
                                        "helper": "The placeholder is what is shown in the field when no value is provided yet"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "helper",
                                    "config": {
                                        "label": "Helper Text",
                                        "helper": "Help text is meant to provide additional guidance on the field's value"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "richtext",
                                    "config": {
                                        "label": "Rich Text",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ValidationSelect",
                                    "field": "validation",
                                    "config": {
                                        "label": "Validation Rules",
                                        "helper": "The validation rules needed for this field"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "rows",
                                    "config": {
                                        "label": "Rows",
                                        "helper": "The number of rows to provide for input",
                                        "validation": "integer"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "readonly",
                                    "config": {
                                        "label": "Read Only",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "color",
                                    "config": {
                                        "label": "Text Color",
                                        "helper": "Set the element's text color",
                                        "options": [
                                            {
                                                "value": "text-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "text-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "text-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "text-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "text-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "text-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "text-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "text-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "ColorSelect",
                                    "field": "bgcolor",
                                    "config": {
                                        "label": "Background Color",
                                        "helper": "Set the element's background color",
                                        "options": [
                                            {
                                                "value": "alert alert-primary",
                                                "content": "primary"
                                            },
                                            {
                                                "value": "alert alert-secondary",
                                                "content": "secondary"
                                            },
                                            {
                                                "value": "alert alert-success",
                                                "content": "success"
                                            },
                                            {
                                                "value": "alert alert-danger",
                                                "content": "danger"
                                            },
                                            {
                                                "value": "alert alert-warning",
                                                "content": "warning"
                                            },
                                            {
                                                "value": "alert alert-info",
                                                "content": "info"
                                            },
                                            {
                                                "value": "alert alert-light",
                                                "content": "light"
                                            },
                                            {
                                                "value": "alert alert-dark",
                                                "content": "dark"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "default-value-editor",
                                    "field": "defaultValue",
                                    "config": {
                                        "label": "Default Value",
                                        "helper": "The default value is pre populated using the existing request data. This feature will allow you to modify the value displayed on screen load if needed."
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormTextArea",
                            "editor-component": "FormTextArea"
                        },
                        {
                            "label": "Rich Text",
                            "config": {
                                "icon": "fas fa-pencil-ruler",
                                "label": null,
                                "content": null,
                                "interactive": true,
                                "renderVarHtml": false
                            },
                            "component": "FormHtmlViewer",
                            "inspector": [
                                {
                                    "type": "FormTextArea",
                                    "field": "content",
                                    "config": {
                                        "rows": 5,
                                        "label": "Content",
                                        "value": null,
                                        "helper": "The HTML text to display"
                                    }
                                },
                                {
                                    "type": "FormCheckbox",
                                    "field": "renderVarHtml",
                                    "config": {
                                        "label": "Render HTML from a Variable",
                                        "value": null,
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormHtmlEditor",
                            "editor-component": "FormHtmlEditor"
                        },
                        {
                            "label": "Page Navigation",
                            "config": {
                                "icon": "far fa-compass",
                                "event": "pageNavigate",
                                "label": "Back",
                                "variant": "primary",
                                "eventData": "0"
                            },
                            "component": "FormButton",
                            "inspector": [
                                {
                                    "type": "PageSelect",
                                    "field": "eventData",
                                    "config": {
                                        "label": "Destination Screen",
                                        "helper": "The destination page to navigate to"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Button Label",
                                        "helper": "The label describes the button's text"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "variant",
                                    "config": {
                                        "label": "Button Variant Style",
                                        "helper": "The variant determines the appearance of the button",
                                        "options": [
                                            {
                                                "value": "primary",
                                                "content": "Primary"
                                            },
                                            {
                                                "value": "secondary",
                                                "content": "Secondary"
                                            },
                                            {
                                                "value": "success",
                                                "content": "Success"
                                            },
                                            {
                                                "value": "danger",
                                                "content": "Danger"
                                            },
                                            {
                                                "value": "warning",
                                                "content": "Warning"
                                            },
                                            {
                                                "value": "info",
                                                "content": "Info"
                                            },
                                            {
                                                "value": "light",
                                                "content": "Light"
                                            },
                                            {
                                                "value": "dark",
                                                "content": "Dark"
                                            },
                                            {
                                                "value": "link",
                                                "content": "Link"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "PageNavigation",
                            "editor-component": "FormButton"
                        },
                        {
                            "label": "Submit Button",
                            "config": {
                                "icon": "fas fa-share-square",
                                "name": "resetpage",
                                "event": "script",
                                "label": "Reset this page",
                                "loading": false,
                                "tooltip": [],
                                "variant": "primary",
                                "fieldValue": "page3",
                                "loadingLabel": "Loading...",
                                "defaultSubmit": true
                            },
                            "component": "FormButton",
                            "inspector": [
                                {
                                    "type": "FormInput",
                                    "field": "label",
                                    "config": {
                                        "label": "Label",
                                        "helper": "The label describes the button's text"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "name",
                                    "config": {
                                        "name": "Variable Name",
                                        "label": "Variable Name",
                                        "helper": "A variable name is a symbolic name to reference information.",
                                        "validation": "regex:\/^(?:[A-Za-z])(?:[0-9A-Z_.a-z])*(?<![.])$\/|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "event",
                                    "config": {
                                        "label": "Type",
                                        "helper": "Choose whether the button should submit the form",
                                        "options": [
                                            {
                                                "value": "submit",
                                                "content": "Submit Button"
                                            },
                                            {
                                                "value": "script",
                                                "content": "Regular Button"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "LoadingSubmitButton",
                                    "field": "loading",
                                    "config": {
                                        "label": "Loading Submit Button",
                                        "helper": "Loading Submit Button"
                                    }
                                },
                                {
                                    "type": "LabelSubmitButton",
                                    "field": "loadingLabel",
                                    "config": {
                                        "label": "Loading Submit Button Label",
                                        "helper": "Loading Submit Button Label"
                                    }
                                },
                                {
                                    "type": {
                                        "_Ctor": [],
                                        "props": {
                                            "label": {
                                                "type": null
                                            },
                                            "value": {
                                                "type": null
                                            },
                                            "helper": {
                                                "type": null
                                            }
                                        },
                                        "watch": {
                                            "value": {
                                                "user": true,
                                                "immediate": true
                                            }
                                        },
                                        "methods": [],
                                        "computed": [],
                                        "_compiled": true,
                                        "components": {
                                            "FormTextArea": {
                                                "name": "FormTextArea",
                                                "_Ctor": [],
                                                "props": {
                                                    "name": {
                                                        "type": null
                                                    },
                                                    "rows": {
                                                        "type": null
                                                    },
                                                    "error": {
                                                        "type": null
                                                    },
                                                    "label": {
                                                        "type": null
                                                    },
                                                    "value": {
                                                        "type": null
                                                    },
                                                    "helper": {
                                                        "type": null
                                                    },
                                                    "readonly": {
                                                        "type": null
                                                    },
                                                    "richtext": {
                                                        "type": null
                                                    },
                                                    "controlClass": {
                                                        "type": null
                                                    }
                                                },
                                                "watch": {
                                                    "rows": {
                                                        "user": true,
                                                        "immediate": true
                                                    }
                                                },
                                                "mixins": [
                                                    {
                                                        "methods": [],
                                                        "directives": {
                                                            "uni-id": [],
                                                            "uni-for": [],
                                                            "uni-form": [],
                                                            "uni-aria-owns": [],
                                                            "uni-aria-flowto": [],
                                                            "uni-aria-controls": [],
                                                            "uni-aria-labelledby": [],
                                                            "uni-aria-describedby": [],
                                                            "uni-aria-activedescendant": []
                                                        }
                                                    },
                                                    {
                                                        "name": "ValidationMixin",
                                                        "props": {
                                                            "config": {
                                                                "type": null
                                                            },
                                                            "validation": {
                                                                "type": null
                                                            },
                                                            "validationData": {
                                                                "type": null
                                                            },
                                                            "validationField": {
                                                                "type": null
                                                            },
                                                            "validationMessages": {
                                                                "type": null
                                                            }
                                                        },
                                                        "watch": {
                                                            "validationData": {
                                                                "deep": true,
                                                                "user": true
                                                            }
                                                        },
                                                        "mixins": [
                                                            {
                                                                "name": "ProxyDataMixin",
                                                                "methods": []
                                                            }
                                                        ],
                                                        "methods": [],
                                                        "computed": []
                                                    }
                                                ],
                                                "methods": [],
                                                "computed": [],
                                                "_compiled": true,
                                                "components": {
                                                    "Editor": {
                                                        "props": {
                                                            "plugins": [
                                                                null,
                                                                null
                                                            ],
                                                            "toolbar": [
                                                                null,
                                                                null
                                                            ],
                                                            "modelEvents": [
                                                                null,
                                                                null
                                                            ]
                                                        },
                                                        "watch": []
                                                    },
                                                    "DisplayErrors": {
                                                        "_Ctor": [],
                                                        "props": {
                                                            "name": {
                                                                "type": null
                                                            },
                                                            "error": {
                                                                "type": null
                                                            },
                                                            "validator": {
                                                                "type": null
                                                            }
                                                        },
                                                        "computed": [],
                                                        "_compiled": true,
                                                        "staticRenderFns": []
                                                    },
                                                    "RequiredAsterisk": {
                                                        "name": "RequiredAsterisk",
                                                        "_Ctor": [],
                                                        "_compiled": true,
                                                        "staticRenderFns": []
                                                    }
                                                },
                                                "inheritAttrs": false,
                                                "staticRenderFns": []
                                            }
                                        },
                                        "inheritAttrs": false,
                                        "staticRenderFns": []
                                    },
                                    "field": "tooltip",
                                    "config": {
                                        "label": "Tooltip",
                                        "helper": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "fieldValue",
                                    "config": {
                                        "label": "Value",
                                        "helper": "The value being submitted"
                                    }
                                },
                                {
                                    "type": "FormMultiselect",
                                    "field": "variant",
                                    "config": {
                                        "label": "Button Variant Style",
                                        "helper": "The variant determines the appearance of the button",
                                        "options": [
                                            {
                                                "value": "primary",
                                                "content": "Primary"
                                            },
                                            {
                                                "value": "secondary",
                                                "content": "Secondary"
                                            },
                                            {
                                                "value": "success",
                                                "content": "Success"
                                            },
                                            {
                                                "value": "danger",
                                                "content": "Danger"
                                            },
                                            {
                                                "value": "warning",
                                                "content": "Warning"
                                            },
                                            {
                                                "value": "info",
                                                "content": "Info"
                                            },
                                            {
                                                "value": "light",
                                                "content": "Light"
                                            },
                                            {
                                                "value": "dark",
                                                "content": "Dark"
                                            },
                                            {
                                                "value": "link",
                                                "content": "Link"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "conditionalHide",
                                    "config": {
                                        "label": "Visibility Rule",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "DeviceVisibility",
                                    "field": "deviceVisibility",
                                    "config": {
                                        "label": "Device Visibility",
                                        "helper": "This control is hidden until this expression is true"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customFormatter",
                                    "config": {
                                        "label": "Custom Format String",
                                        "helper": "Use the Mask Pattern format <br> Date ##\/##\/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                                        "validation": null
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "customCssSelector",
                                    "config": {
                                        "label": "CSS Selector Name",
                                        "helper": "Use this in your custom css rules",
                                        "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "ariaLabel",
                                    "config": {
                                        "label": "Aria Label",
                                        "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                                    }
                                },
                                {
                                    "type": "FormInput",
                                    "field": "tabindex",
                                    "config": {
                                        "label": "Tab Order",
                                        "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                                        "validation": "regex: [0-9]*"
                                    }
                                }
                            ],
                            "editor-control": "FormSubmit",
                            "editor-component": "FormButton"
                        }
                    ],
                    "order": 2
                }
            ],
            "computed": [],
            "custom_css": null,
            "created_at": "2024-05-16T10:39:27+00:00",
            "updated_at": "2024-07-02T20:14:27+00:00",
            "status": "ACTIVE",
            "key": null,
            "watchers": [
                {
                    "input_data": "{}",
                    "script_configuration": "{}",
                    "synchronous": true,
                    "show_async_loading": false,
                    "run_onload": false,
                    "name": "reset fields",
                    "watching": "resetfields",
                    "script": {
                        "id": "script-2272",
                        "uuid": "9c50462c-f636-48a9-87c2-81efb898f2a5",
                        "key": null,
                        "title": "Test - reset this page",
                        "description": "reset this page",
                        "language": "php",
                        "code": "<?php \n\/*  \n *  Welcome to ProcessMaker 4 Script Editor \n *  To access Environment Variables use getenv(\"ENV_VAR_NAME\") \n *  To access Request Data use $data \n *  To access Configuration Data use $config \n *  To preview your script, click the Run button using the provided input and config data \n *  Return an array and it will be merged with the processes data \n *  Example API to retrieve user email by their ID $api->users()->getUserById(1)['email'] \n *  API Documentation https:\/\/github.com\/ProcessMaker\/docker-executor-php\/tree\/master\/docs\/sdk \n *\/\n\n return [\"input1\" => \"\", \"input2\" => \"\",\"q1comment\" => \"\", \"q2comment\" => \"\"];",
                        "retry_wait_time": 5,
                        "retry_attempts": 0,
                        "timeout": 60,
                        "run_as_user_id": 3,
                        "created_at": "2024-05-21T14:04:58+00:00",
                        "updated_at": "2024-06-18T14:03:01+00:00",
                        "status": "ACTIVE",
                        "script_category_id": "1",
                        "script_executor_id": 22,
                        "is_template": 0,
                        "asset_type": null,
                        "projects": "[]"
                    },
                    "script_id": "2272",
                    "script_key": null,
                    "output_variable": "nyc",
                    "uid": "17193237425751"
                }
            ],
            "translations": null,
            "is_template": 0,
            "asset_type": null,
            "projects": "[]",
            "categories": [
                {
                    "id": 1,
                    "uuid": "977e02fc-300a-4d35-8a85-1fe9078e62d2",
                    "name": "Uncategorized",
                    "status": "ACTIVE",
                    "is_system": 0,
                    "created_at": "2022-10-13T15:25:17+00:00",
                    "updated_at": "2022-10-13T15:25:17+00:00",
                    "pivot": {
                        "category_type": "ProcessMaker\\Models\\ScreenCategory",
                        "assignable_id": 9375,
                        "category_id": 1
                    }
                }
            ]
        }
    ],
    "screen_categories": [],
    "scripts": [
        {
            "id": 2272,
            "uuid": "9c50462c-f636-48a9-87c2-81efb898f2a5",
            "key": null,
            "title": "Test - reset this page",
            "description": "reset this page",
            "language": "php",
            "code": "<?php \n\/*  \n *  Welcome to ProcessMaker 4 Script Editor \n *  To access Environment Variables use getenv(\"ENV_VAR_NAME\") \n *  To access Request Data use $data \n *  To access Configuration Data use $config \n *  To preview your script, click the Run button using the provided input and config data \n *  Return an array and it will be merged with the processes data \n *  Example API to retrieve user email by their ID $api->users()->getUserById(1)['email'] \n *  API Documentation https:\/\/github.com\/ProcessMaker\/docker-executor-php\/tree\/master\/docs\/sdk \n *\/\n\n return [\"input1\" => \"\", \"input2\" => \"\",\"q1comment\" => \"\", \"q2comment\" => \"\", \"form_text_area_1\" => \"\"];\n \/\/Aca limpiamos las variables, ahora veras el comportamiento ....luego de correr este script con el watcher\n\/*switch ($config[\"action\"]) {\n   case 'clear_invoice_dashborad_filters':\n        return [\n            \"q1comment\" => \"\",\n            \"form_text_area_1\" => \"\",\n            \"input1\" => \"\",\n            \"input2\" =>\"\"\n        ];\n\n    default:\n       return [];\n}*\/",
            "retry_wait_time": 5,
            "retry_attempts": 0,
            "timeout": 60,
            "run_as_user_id": 3,
            "created_at": "2024-05-21T14:04:58+00:00",
            "updated_at": "2024-06-25T21:07:13+00:00",
            "status": "ACTIVE",
            "script_category_id": "1",
            "script_executor_id": 22,
            "is_template": 0,
            "asset_type": null,
            "projects": "[]",
            "categories": [
                {
                    "id": 1,
                    "uuid": "977e02fc-317d-4907-b60c-74ffb0613e06",
                    "name": "Uncategorized",
                    "status": "ACTIVE",
                    "is_system": 0,
                    "created_at": "2022-10-13T15:25:17+00:00",
                    "updated_at": "2022-10-13T15:25:17+00:00",
                    "pivot": {
                        "category_type": "ProcessMaker\\Models\\ScriptCategory",
                        "assignable_id": 2272,
                        "category_id": 1
                    }
                }
            ]
        }
    ]
}