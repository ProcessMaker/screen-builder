{
  "type": "screen_package",
  "version": "2",
  "screens": [
    {
      "id": 4,
      "screen_category_id": "1",
      "title": "test select list pmql",
      "description": "test select list pmql",
      "type": "FORM",
      "config": [
        {
          "name": "test select list pmql",
          "items": [
            {
              "label": "Select List",
              "config": {
                "icon": "fas fa-angle-double-down",
                "name": "form_select_list_1",
                "label": "New Select List",
                "helper": null,
                "options": {
                  "key": "data",
                  "value": "id: {{ data.id }}",
                  "dataName": "response.data",
                  "jsonData": null,
                  "renderAs": "dropdown",
                  "editIndex": null,
                  "pmqlQuery": null,
                  "dataSource": "dataConnector",
                  "optionsList": [],
                  "removeIndex": null,
                  "showRenderAs": true,
                  "showJsonEditor": false,
                  "showOptionCard": false,
                  "selectedOptions": [],
                  "allowMultiSelect": false,
                  "selectedEndPoint": "ListAll",
                  "showRemoveWarning": false,
                  "valueTypeReturned": "object",
                  "selectedDataSource": 2
                },
                "readonly": false,
                "validation": [],
                "placeholder": null,
                "rootElement": "response",
                "dataSourceUrl": null,
                "dataSourceEndpoint": null
              },
              "component": "FormSelectList",
              "inspector": [
                {
                  "type": "FormInput",
                  "field": "name",
                  "config": {
                    "name": "Variable Name",
                    "label": "Variable Name",
                    "helper": "A variable name is a symbolic name to reference information.",
                    "validation": "regex:/^(?:[A-Za-z])(?:[0-9A-Z_.a-z])*[^.]$/|required|not_in:null,break,case,catch,continue,debugger,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,this,throw,try,typeof,var,void,while,with,class,const,enum,export,extends,import,super,true,false"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "label",
                  "config": {
                    "label": "Label",
                    "helper": "The label describes the field's name"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "placeholder",
                  "config": {
                    "label": "Placeholder Text",
                    "helper": "The placeholder is what is shown in the field when no value is provided yet"
                  }
                },
                {
                  "type": "ValidationSelect",
                  "field": "validation",
                  "config": {
                    "label": "Validation Rules",
                    "helper": "The validation rules needed for this field"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "helper",
                  "config": {
                    "label": "Helper Text",
                    "helper": "Help text is meant to provide additional guidance on the field's value"
                  }
                },
                {
                  "type": "OptionsList",
                  "field": "options",
                  "config": { "label": null, "helper": null }
                },
                {
                  "type": "ColorSelect",
                  "field": "color",
                  "config": {
                    "label": "Text Color",
                    "helper": "Set the element's text color",
                    "options": [
                      { "value": "text-primary", "content": "primary" },
                      { "value": "text-secondary", "content": "secondary" },
                      { "value": "text-success", "content": "success" },
                      { "value": "text-danger", "content": "danger" },
                      { "value": "text-warning", "content": "warning" },
                      { "value": "text-info", "content": "info" },
                      { "value": "text-light", "content": "light" },
                      { "value": "text-dark", "content": "dark" }
                    ]
                  }
                },
                {
                  "type": "ColorSelect",
                  "field": "bgcolor",
                  "config": {
                    "label": "Background Color",
                    "helper": "Set the element's background color",
                    "options": [
                      { "value": "alert alert-primary", "content": "primary" },
                      {
                        "value": "alert alert-secondary",
                        "content": "secondary"
                      },
                      { "value": "alert alert-success", "content": "success" },
                      { "value": "alert alert-danger", "content": "danger" },
                      { "value": "alert alert-warning", "content": "warning" },
                      { "value": "alert alert-info", "content": "info" },
                      { "value": "alert alert-light", "content": "light" },
                      { "value": "alert alert-dark", "content": "dark" }
                    ]
                  }
                },
                {
                  "type": {
                    "props": ["value", "helper"],
                    "watch": { "value": { "immediate": true } },
                    "methods": [],
                    "_scopeId": "data-v-172d71e1",
                    "computed": { "effectiveValue": [] },
                    "_compiled": true,
                    "components": {
                      "MonacoEditor": {
                        "name": "monaco-editor",
                        "_Ctor": [],
                        "props": { "amdRequire": [] },
                        "extends": {
                          "name": "MonacoEditor",
                          "model": { "event": "change" },
                          "props": {
                            "theme": { "default": "vs" },
                            "value": { "required": true },
                            "options": [],
                            "language": [],
                            "original": [],
                            "amdRequire": [],
                            "diffEditor": { "default": false }
                          },
                          "watch": {
                            "options": { "deep": true, "user": true }
                          },
                          "methods": []
                        },
                        "methods": []
                      }
                    },
                    "staticRenderFns": []
                  },
                  "field": "defaultValue",
                  "config": {
                    "label": "Default Value",
                    "helper": "The default value is pre populated using the existing request data. This feature will allow you to modify the value displayed on screen load if needed."
                  }
                },
                {
                  "type": "FormCheckbox",
                  "field": "readonly",
                  "config": { "label": "Read Only", "helper": null }
                },
                {
                  "type": "FormInput",
                  "field": "conditionalHide",
                  "config": {
                    "label": "Visibility Rule",
                    "helper": "This control is hidden until this expression is true"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "customFormatter",
                  "config": {
                    "label": "Custom Format String",
                    "helper": "Use the Mask Pattern format <br> Date ##/##/#### <br> SSN ###-##-#### <br> Phone (###) ###-####",
                    "validation": null
                  }
                },
                {
                  "type": "FormInput",
                  "field": "customCssSelector",
                  "config": {
                    "label": "CSS Selector Name",
                    "helper": "Use this in your custom css rules",
                    "validation": "regex: [-?[_a-zA-Z]+[_-a-zA-Z0-9]*]"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "ariaLabel",
                  "config": {
                    "label": "Aria Label",
                    "helper": "Attribute designed to help assistive technology (e.g. screen readers) attach a label"
                  }
                },
                {
                  "type": "FormInput",
                  "field": "tabindex",
                  "config": {
                    "label": "Tab Order",
                    "helper": "Order in which a user will move focus from one control to another by pressing the Tab key",
                    "validation": "regex: [0-9]*"
                  }
                }
              ],
              "editor-control": "FormSelectList",
              "editor-component": "FormSelectList"
            }
          ]
        }
      ],
      "computed": [],
      "custom_css": null,
      "created_at": "2021-11-08T10:31:29-08:00",
      "updated_at": "2021-11-08T10:38:21-08:00",
      "status": "ACTIVE",
      "key": null,
      "watchers": [],
      "categories": [
        {
          "id": 1,
          "name": "Uncategorized",
          "status": "ACTIVE",
          "is_system": 0,
          "created_at": "2021-11-08T10:25:46-08:00",
          "updated_at": "2021-11-08T10:25:46-08:00",
          "pivot": {
            "assignable_id": 4,
            "category_id": 1,
            "category_type": "ProcessMaker\\Models\\ScreenCategory"
          }
        }
      ]
    }
  ],
  "screen_categories": [],
  "scripts": []
}
