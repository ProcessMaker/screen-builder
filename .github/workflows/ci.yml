name: ci

on:
  pull_request:
    types: [opened, reopened, synchronize, edited]

jobs:
  e2e:
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [0, 1, 2, 3, 4]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.event.pull_request.body }}
          regex: 'ci:vue-form-elements:(.*?)[\s\n\r]'
      
      - name: Checkout 🛎
        uses: actions/checkout@v4
        if: ${{ steps.regex-match.outputs.match != null }}
        with:
          repository: ProcessMaker/vue-form-elements
          path: vue-form-elements
          ref: ${{ steps.regex-match.outputs.group1 }}

      - name: Setup node env 🏗
        uses: actions/setup-node@master
        with:
          node-version: 20
          check-latest: true
          cache: 'npm'
      
      - name: Install vue-form-elements dependencies 
        if: ${{ steps.regex-match.outputs.match != null }}
        working-directory: vue-form-elements
        run: npm ci && npm run build-bundle

      - name: Install dependencies 👨🏻‍💻
        run: npm ci

      - name: Link vue-form-elements
        run: npm link ../vue-form-elements

#      - name: Run linter 👀
#        run: npm run lint

      #      - name: Run tests 🧪
      #        run: npm run test

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          install: false
          start: npm run dev
          wait-on: 'http://localhost:5173/'
          config-file: cypress.config.js
          spec: "tests/e2e/**/*"
          record: true
          parallel: true
          group: 'CI - Chrome'
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          # re-enable PR comment bot
          COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}
      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        # Only capture images on failure
        if: failure()
        with:
          name: cypress-screenshots
          path: tests/e2e/screenshots

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v4
        # Only capture videos on failure
        if: failure()
        with:
          name: cypress-videos
          path: tests/e2e/videos
      - run: ls -l .
      - run: ls -R coverage .nyc_output

      - name: Prepare coverage
        run: cp .nyc_output/out.json coverage/coverage-${{ matrix.containers }}.json
      - name: Archive code coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.containers }}
          path: ./coverage/coverage-${{ matrix.containers }}.json
  coverage:
    needs: e2e
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎
        uses: actions/checkout@v4

      - name: Setup node env 🏗
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'npm'

      - name: Install dependencies 👨🏻‍💻
        run: npm ci
      - name: Create reports folder
        run: mkdir reports .nyc_output
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          path: reports
          merge-multiple: true
      - name: Run Coverage
        run: |
          npx nyc merge reports
          mv coverage.json .nyc_output/out.json
      - name: Create coverage report
        run: npx nyc report --reporter html --reporter text --reporter json-summary --reporter lcov --report-dir coverage
      - name: Store Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: |
            coverage
            .nyc_output
            reports
  scan:
    needs: coverage
    uses: ./.github/workflows/sonarqube.yml
    secrets: inherit
